From above list:
3. Check placeholder code on components.py, test thoroughly. Mainly motors and servos
7. Get servo min/max values


INFO FOR UPDATED SERVO MOVEMENT WITH S-CURVE 

In settings.py
	Have dictionary of servo presets corresponding servo position and controller input

In robot_motors.py
	Pass the dictionaries from settings to the corresponding servo objects

In components.py in the ServoComponent object:
	Check which servo we are working with based on self.name
	Check which of the buttons are pressed, if any
	For a button that is pressed:
		if the servo is currently at the position corresponding to the value in the presets dictionary, pass and don't update position
		if it's going straight up to the launcher, bypass sCurve
		else use sCurve to go to the predetermined position in the presets dictionary (ideally in a new Thread)
			We need to know the preset value and the current position to find the relative angle
	Update the current position of the servo